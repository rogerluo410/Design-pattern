<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>设计模式：Visitor模式 - superbeck的专栏 - 博客频道 - CSDN.NET</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="description" content="Visitor模式是一个用起来很简单，理解起来可能稍微有一点困难的模式。不过明白了之后就清楚了，其实也是非常的简单。问题需要向对象结构中增加新的方法，但是增加起来会很费劲或者会破坏设计。&#160;案例举一个例子。假设我们有一组机器（Windows，Unix，Linux，Mac等），每种机器都有自" />
<script src="http://static.blog.csdn.net/scripts/jquery.js" type="text/javascript"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/ad.js?v=1.1"></script>
<link rel="Stylesheet" type="text/css" href="http://static.blog.csdn.net/skin/default/css/style.css?v=1.1" />
<link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="/superbeck/rss/list" />
<link rel="shortcut icon" href="/favicon.ico" />
<link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css" />
</head>
<body>
<script src="http://csdnimg.cn/pubnav/js/pub_topnav_2011.js"type="text/javascript"></script>

<div id="container">
<div id="header">
    <div class="header">
        <div id="blog_title">
            <h1><a href="http://blog.csdn.net/superbeck">superbeck的专栏</a></h1>
            <h2>以小事始，方知大事之成败</h2>
            <div class="clear"></div>
        </div>
        <div class="clear"></div>
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg"></div>
    <div class="navigator">
        <ul>
            <li id="btnContents"><a href="http://blog.csdn.net/superbeck?viewmode=contents"><span><img src="http://static.blog.csdn.net/images/ico_list.gif">目录视图</span></a></li>
            <li id="btnView"><a href="http://blog.csdn.net/superbeck?viewmode=list"><span><img src="http://static.blog.csdn.net/images/ico_summary.gif">摘要视图</span></a></li>
            <li id="btnRss"><a href="http://blog.csdn.net/superbeck/rss/list"><span><img src="http://static.blog.csdn.net/images/ico_rss.gif">订阅</span></a></li>
</ul>
    </div>
</div>
<script type="text/javascript">
    var username = "superbeck";
    var _blogger = username;
    var blog_address = "http://blog.csdn.net/superbeck";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "";
</script>

<div id="body">
<div id="main">
<div class="main">
<div class="notice"> 

<a href="https://code.csdn.net/blog/12" target="_blank">
<font color=red>公告：博客新增直接引用代码功能</font></a>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://www.csdn.net/article/2013-07-24/2816320" target="_blank"><font color=blue>专访谭海燕：移动互联网开发的那些事
</font></a>

&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/csdnproduct/article/details/9495139
"target="_blank">
<font color=red>CSDN博客频道自定义域名、标签搜索功能上线啦！


 </font></a>

&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/adali/article/details/9813651"target="_blank">
<font color=blue>独一无二的职位：开源社区经理 
 </font></a>




</div>
<div id="article_details" class="details">
    <div class="article_title">
    <span class="ico ico_type_Original"></span>
    <h3>
        <span class="link_title"><a href="/superbeck/article/details/5325991">
        设计模式：Visitor模式
        </a></span>
    </h3>
</div>

        
    <div class="article_manage">
        <span class="link_categories">
        分类：
            <a href="/superbeck/article/category/490099">设计/UML/MDA</a> 
            <a href="/superbeck/article/category/207307">java</a> 
        </span>
    <span class="link_postdate">2010-02-25 14:02</span>
    <span class="link_view" title="阅读次数">2511人阅读</span>
    <span class="link_comments" title="评论次数"><a href="#comments">评论</a>(2)</span>
    <span class="link_collect"><a href="javascript:void(0);" onclick="javascript:collectArticle('设计模式：Visitor模式','5325991');return false;" title="收藏">收藏</a></span>
    <span class="link_report"><a href="#report"  onclick="javascript:report(5325991,2);return false;" title="举报">举报</a></span>
    
</div>
<div class="tag2box"><a href='http://blog.csdn.net/tag/details.html?tag=%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f' target=_blank>设计模式</a><a href='http://blog.csdn.net/tag/details.html?tag=overloading' target=_blank>overloading</a><a href='http://blog.csdn.net/tag/details.html?tag=%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84' target=_blank>数据结构</a><a href='http://blog.csdn.net/tag/details.html?tag=decorator' target=_blank>decorator</a><a href='http://blog.csdn.net/tag/details.html?tag=%e5%b7%a5%e5%85%b7' target=_blank>工具</a><a href='http://blog.csdn.net/tag/details.html?tag=%e8%af%ad%e8%a8%80' target=_blank>语言</a></div>


    
<div id="article_content" class="article_content">
<p><span style="font-size: small;">Visitor模式是一个用起来很简单，理解起来可能稍微有一点困难的模式。不过明白了之后就清楚了，其实也是非常的简单。<br />

</span>

</p>
<p><span style="font-size: small;"><br />

</span>

</p>
<p><span style="font-size: medium;"><strong>问题</strong>

</span>

</p>
<p><span style="font-size: small;">需要向对象结构中增加新的方法，但是增加起来会很费劲或者会破坏设计。</span>

</p>
<p>&nbsp;</p>
<p><span style="font-size: small;"><span style="font-size: medium;"><strong>案例</strong>

</span>

<br />

</span>

</p>
<p><span style="font-size: small;">举一个例子。假设我们有一组机器（Windows，Unix，Linux，Mac等），每种机器都有自己不同的底层结构。现在需要在各台机器上装一个软件或者进行一项配置。由于每种操作系统都是不一样的架构，所以做某种配置或者是安装某款软件的手顺都是不同的，而且我们不可能也不想在原有的操作系统中直接添加一个同名的方法来实现这个功能。那么这个时候，Visitor模式就是一个很好的利器了。</span>

</p>
<p><span style="font-size: small;"><br />

</span>

</p>
<p><span style="font-size: small;">还有，最近做的一个工具也是比较适合使用Visitor模式。这个工具是类似于Findbugs的一种功能，要解析一种编程语言的源码文件，然后对其中的内容进行分析，看是否符合某种类型的bug pattern。源码文件首先将被解析成一个数据结构，然后每条规则只需要检查这个数据结构中的一部分，并不需要检查全部的数据结构。对于这种工具，Visitor模式算是再好不过的一种解决方案了。<br />

</span>

</p>
<p>&nbsp;</p>
<p><span style="font-size: small;"><span style="font-size: medium;"><strong>图示</strong>

</span>

<br />

</span>

</p>
<p><span style="font-size: small;">下面两幅类图就是Visitor模式的一种普通的表现形式，它们表示的意思基本上是一致的。<br />

</span>

</p>
<p><strong><span style="font-size: small;">Picture1</span>

</strong>

</p>
<p><span style="font-size: small;"><img src="http://hi.csdn.net/attachment/201002/25/390690_12670890419Evm.png" alt="Visitor设计模式" width="660" height="824" />

</span>

</p>
<p><strong><span style="font-size: small;">Picture2</span>

</strong>

</p>
<p><span style="font-size: small;"><img src="http://hi.csdn.net/attachment/201002/25/390690_1267089052d3D2.png" alt="Visitor设计模式 " width="660" height="500" />

</span>

</p>
<p><span style="font-size: small;">Picture2和Picture1的区别只是visitor方法的名字不同而已。Picture1中的命名方法可能更常用一些，Picture2中的命名方法则更清晰一些。</span>

</p>
<p><span style="font-size: small;"><br />

</span>

</p>
<p>以上<span style="font-size: small;">面那两幅类图中，有一点可能稍微不容易理解，就是一定要在对象结构中的每一个类中增加一个accept(visitor)，而且方法体里面又只有一行代码，就只是反调Visitor类。如果这样的话，让Visitor直接访问数据结构不就行了吗？</span>

</p>
<p>&nbsp;</p>
<p>这个问题也让我困扰了一阵子，后来才有点明白，关键点就是使用了双重分派。</p>
<p><span style="font-size: small;"><br />

</span>

</p>
<p><strong><span style="font-size: medium;">Double Dispatch(双重分派,Dual Dispatch)</span>

</strong>

</p>
<p><span style="font-size: small;">面向对象的程序中有Overloading(重载)和Overriding(重写)两种概念。</span>

</p>
<p><span style="font-size: small;">Overriding是指子类重写父类中已有的方法，那么如果一个对象，虽然被申明为父类类型，但是赋值是子类类型，那么在对该对象调用方法时，程序将自动的调用子类中的方法，而回避父类中已有的方法。</span>
<span style="font-size: small;">这一点是在运行时才能够判断的。这个是动态分派。</span>
<span style="font-size: small;"></span>

</p>
<p><span style="font-size: small;">Overloading是指一个类中，多个同名方法，但是参数不同，有的是父类对象，有的是子类对象。那么在调用这个同名方法时，JVM会自动地根据传入的参数的实际类型而调用不同的方法。</span>
<span style="font-size: small;">这一点是在编译时就已经决定了的。这个就是静态分派。</span>

</p>
<p><span style="font-size: small;">而Java和C++是动态单分派，静态多分派语言。</span>

</p>
<p><span style="font-size: small;"><br />

</span>

</p>
<p><span style="font-size: small;">以<strong>Picture1</strong>

为例，Client中的代码中，elemA.accept(visitor);在判断到底是调用Element还是ConcreateElementA的accept方法时使用的是动态分派；而ConcreateElementA的accept方法中的代码 visitor.visit(this); 在判断到底是调用Visitor类的哪一个visit方法时，是根据this所指代的类型来决定的(也就是参数)，这里使用的是静态分派。</span>

</p>
<p>&nbsp;</p>
<p><span style="font-size: small;">回答之前那个疑问。如果不使用双重分派，不在对象结构的类中增加accept方法的话，那么对象结构中类之间的关系也就没有意义了。Visitor.visit(elem)这样的方法要能够正确使用的话，就必须把elem声明为具体的类型，如ConcreateElementA，否则程序将直接尝试调用Visitor.visit(Element)方法，而不是Visitor.visit(ConreateElementA)。</span>
</p>
<p>&nbsp;</p>
<p><span style="font-size: small;">简单一句话总结，调用方法的主体对象是动态分派的，而调用的方法是先前静态分派好的。<br />
</span>
</p>
<p><span style="font-size: small;"><br />

</span>

</p>
<p><strong><span style="font-size: medium;">适用对象结构</span>

</strong>
</p>
<p><span style="font-size: small;">其实
visitor模式比较适用的对象结构是，其中的数据类型分属于不同的类型。如果都已经是同一类型的话，那么直接在对象结构的顶层类中做一些修改，可能就可以达到目的，多见于Composite模式。当然，如果是维护项目的话，不想或者不能修改原有数据结构也是常有的事情，这个时候使用visitor模式也是没有问题的。</span>

</p>
<p>
<span style="font-size: small;">依据目的的不同，也可以使用Decorator模式来达成目的。</span>

</p>
<p>&nbsp;</p>
<p><strong><span style="font-size: medium;">适用情况</span>

</strong>

</p>
<p><span style="font-size: small;">1. 需要为一个对象结构添加很多不同的操作</span>

</p>
<p><span style="font-size: small;">2. 对象结构一般是保持不变的，而操作是经常变化的</span>

</p>
<p><span style="font-size: small;">3. 操作是针对于对象结构中的具体类的，而不是仅仅针对于高层类</span>

</p>
<p><span style="font-size: small;">4. 对象结构的内部状态和操作是可见的，或者是原来不可见但是改为可见之后也不会有问题</span>

</p>
<p><span style="font-size: small;"><br />

</span>

</p>
<p><span style="font-size: small;"><br />

</span>

</p>
<p><span style="font-size: medium;"><strong>参考资料</strong>

</span>

</p>
<p><span style="font-size: small;">1. http://hi.baidu.com/xinsikao/blog/item/6ad8cbc4ac6189c038db4919.html</span>

</p>
<p><span style="font-size: small;">2. http://www.cnblogs.com/zhenyulu/articles/81761.html</span>

</p>
<p><span style="font-size: small;">3. http://www.cnblogs.com/perhaps/archive/2005/08/19/218466.html</span>

</p>
<p><span style="font-size: small;">4. http://www.cnblogs.com/idior/archive/2005/08/18/217500.html</span>

</p>
<p><span style="font-size: small;">http://en.wikipedia.org/wiki/Visitor_pattern</span>

</p>
<p><span style="font-size: small;">http://www.cnblogs.com/idior/archive/2005/01/19/94280.html</span>

</p>
<p><span style="font-size: small;"><br />

</span>

</p>
<p><span style="font-size: small;">Double Dispatch:</span>

</p>
<p><span style="font-size: small;">http://www.blogjava.net/dreamstone/archive/2006/12/20/88947.html</span>

</p>
<p><span style="font-size: small;">http://www.eqqon.com/index.php/Double_Dispatch_Mechanism</span>

</p>
<p><span style="font-size: small;">http://en.wikipedia.org/wiki/Double_dispatch</span>

</p>
<p><span style="font-size: small;">http://ifacethoughts.net/2006/07/29/single-double-and-multiple-dispatch/</span>

</p>
<p><span style="font-size: small;"><br />

</span>

</p>
</div>

<div class="share_buttons" id="sharePanel"></div>
<!--192.168.100.34-->
<div class="article_next_prev">
    <li class="prev_article"><span>上一篇：</span><a href="/superbeck/article/details/5268681">用户体验到底有多重要？——说在支付宝年会后</a></li>
    <li class="next_article"><span>下一篇：</span><a href="/superbeck/article/details/5347815">JSP/Servlet中的编码相关设置</a></li>
</div>


    
</div>
<div id="ad_cen">
<script type="text/javascript" >BAIDU_CLB_SLOT_ID = "117306";</script>
<script type="text/javascript" src="http://cbjs.baidu.com/js/o.js"></script>
</div>
<script type="text/javascript">
    //new Ad(4, 'ad_cen');
</script>
<div id="comment_title" class="panel_head">查看评论<a name="comments"></a></div>
<div id="comment_list"></div>
<div id="comment_bar"></div>
<div id="comment_form"></div>
<div class="announce">* 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
<script type="text/javascript">
    var fileName = '5325991';
    var commentscount = 2;
    var islock = false
</script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/comment.js"></script>
<div id="ad_bot"></div>
<script type="text/javascript">
    new Ad(5, 'ad_bot');
</script>
<div id="report_dialog"></div>

<div id="d-top" style="display:none;">
<a id="d-top-a" href="#" title="回到顶部">
<img src="http://static.blog.csdn.net/images/top.png" alt="TOP" /></a>
</div>
<script type="text/javascript">
    $(function(){
        var d_top=$('#d-top');
        document.onscroll=function(){
            var scrTop=(document.body.scrollTop||document.documentElement.scrollTop);
            if(scrTop>500){
                d_top.show();
            }else{
                d_top.hide();
            }
        }
        $('#d-top-a').click(function(){
            scrollTo(0,0);
            this.blur();
            return false;
        });
    });
</script>

<div class="clear"></div>
</div>
</div>

<div id="side">
<div class="side">
<div id="panel_Profile" class="panel">
<ul class="panel_head"><span>个人资料</span></ul>
<ul class="panel_body profile">
<div id="blog_userface">
    <a href="http://my.csdn.net/superbeck" target="_blank">
    <img src="http://avatar.csdn.net/5/C/A/1_superbeck.jpg" title="访问我的空间" style="max-width:90%"/>
    </a>
    <br />
    <span><a href="http://my.csdn.net/superbeck" class="user_name" target="_blank">superbeck</a></span>
</div>
<div class="interact">
<a href="javascript:void(0);" class="attent" id="span_add_follow" title="[加关注]"></a>
<a href="javascript:void(0);" class="letter" onclick="loginto(1)" title="[发私信]"></a>
</div>
<div id="blog_medal">
</div>
<ul id="blog_rank">
    <li>访问：<span>93915次</span></li>
    <li>积分：<span>1765分</span></li>
    <li>排名：<span>第5120名</span></li>
</ul>
<ul id="blog_statistics">
    <li>原创：<span>72篇</span></li>
    <li>转载：<span>20篇</span></li>
    <li>译文：<span>1篇</span></li>
    <li>评论：<span>45条</span></li>
</ul>
</ul>
</div>

<div class="panel">
<ul class="panel_body" style="padding:0;">
<script type="text/javascript" src="http://cbjs.baidu.com/js/m.js"></script> 
<script type="text/javascript"> 
BAIDU_CLB_preloadSlots("724643","117306"); 
</script>
<script type="text/javascript">BAIDU_CLB_fillSlot("724643");</script> 
</ul>
</div>
<div class="panel" id="panel_Search">
    <ul class="panel_head"><span>文章搜索</span></ul>
    <ul class="panel_body">
        <form id="frmSearch" action="http://so.csdn.net/search" class="form_search" target="_blank">
        <span><input id="inputSearch" type="text" class="blogsearch" title="请输入关键字" /></span>
        <input id="btnSubmit" type="submit" value="搜索" title="search in blog" />
        <input type="hidden" name="q" id="inputQ" />
        <input type="hidden" name="t" value="blog" />
        <a id="btnSearchBlog" target="_blank"></a>
        </form>
    </ul>
</div><div id="panel_Category" class="panel">
<ul class="panel_head"><span>文章分类</span></ul>
<ul class="panel_body">
<li>
<a href="http://blog.csdn.net/superbeck/article/category/551445">Database</a><span>(2)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/494146">eclipse</a><span>(7)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/207307">java</a><span>(27)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/417007">Life</a><span>(5)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/487521">notes开发</a><span>(2)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/590316">python</a><span>(1)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/744229">ubuntu/linux</a><span>(0)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/708356">Velocity</a><span>(1)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/547684">Web开发</a><span>(22)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/412477">开发工具相关</a><span>(28)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/451648">开发杂想</a><span>(13)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/490099">设计/UML/MDA</a><span>(13)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/473096">软件工程</a><span>(6)</span>
</li>
</ul>
</div><div id="panel_Archive" class="panel">
<ul class="panel_head"><span>文章存档</span></ul>
<ul class="panel_body">
<div id="archive_list">
<!--归档统计-->
<li><a href="http://blog.csdn.net/superbeck/article/month/2011/04">2011年04月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2011/02">2011年02月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/11">2010年11月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/10">2010年10月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/09">2010年09月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/07">2010年07月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/06">2010年06月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/05">2010年05月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/03">2010年03月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/02">2010年02月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/01">2010年01月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/11">2009年11月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/10">2009年10月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/09">2009年09月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/08">2009年08月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/07">2009年07月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/06">2009年06月</a><span>(9)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/05">2009年05月</a><span>(6)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/03">2009年03月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/02">2009年02月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/01">2009年01月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2008/12">2008年12月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2008/11">2008年11月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2008/10">2008年10月</a><span>(8)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2008/09">2008年09月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2008/08">2008年08月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2008/06">2008年06月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2006/11">2006年11月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2006/10">2006年10月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2006/05">2006年05月</a><span>(1)</span></li>
</div>
</ul>
</div>
<div id="hotarticls" class="panel">
<ul class="panel_head"><span>阅读排行</span></ul>
<ul class="panel_body itemlist">
<li>
<a href="/superbeck/article/details/5721382" title="eclipse上的几个Velocity插件">eclipse上的几个Velocity插件</a><span>(7394)</span>
</li>
<li>
<a href="/superbeck/article/details/4359870" title="Ant:给Ant脚本传递参数的最佳实践">Ant:给Ant脚本传递参数的最佳实践</a><span>(4790)</span>
</li>
<li>
<a href="/superbeck/article/details/4446177" title="设计模式：简单工厂、工厂方法、抽象工厂之小结与区别">设计模式：简单工厂、工厂方法、抽象工厂之小结与区别</a><span>(3877)</span>
</li>
<li>
<a href="/superbeck/article/details/4799407" title="基于java的程序OutOfMemory问题的解决及Xms/Xmx/Xss的解释和应用">基于java的程序OutOfMemory问题的解决及Xms/Xmx/Xss的解释和应用</a><span>(3805)</span>
</li>
<li>
<a href="/superbeck/article/details/3983671" title="程序员兼职创收的新方法 - 依托平台开发应用">程序员兼职创收的新方法 - 依托平台开发应用</a><span>(3587)</span>
</li>
<li>
<a href="/superbeck/article/details/4532818" title="python学习——初次接触(python,wxpython,Boa,py2exe)">python学习——初次接触(python,wxpython,Boa,py2exe)</a><span>(3483)</span>
</li>
<li>
<a href="/superbeck/article/details/3226709" title="一次cygwin的绿化 - 顺便多学一些脚本/注册表的知识">一次cygwin的绿化 - 顺便多学一些脚本/注册表的知识</a><span>(3171)</span>
</li>
<li>
<a href="/superbeck/article/details/5325991" title="设计模式：Visitor模式">设计模式：Visitor模式</a><span>(2511)</span>
</li>
<li>
<a href="/superbeck/article/details/4247145" title="使用Hibernate连接MySQL数据库发生closed.Connection问题的一种解决方法">使用Hibernate连接MySQL数据库发生closed.Connection问题的一种解决方法</a><span>(2254)</span>
</li>
<li>
<a href="/superbeck/article/details/4247066" title="如何用Java实现MySQL数据库的备份和恢复">如何用Java实现MySQL数据库的备份和恢复</a><span>(2124)</span>
</li>
</ul>
</div>
<div id="hotarticls2" class="panel">
<ul class="panel_head"><span>评论排行</span></ul>
<ul class="panel_body itemlist">
<li>
<a href="/superbeck/article/details/4323861" title="StarUML: 插件加载失败的解决方法">StarUML: 插件加载失败的解决方法</a><span>(11)</span>
</li>
<li>
<a href="/superbeck/article/details/4213095" title="使用jstl1.1，注意与1.0的区别">使用jstl1.1，注意与1.0的区别</a><span>(5)</span>
</li>
<li>
<a href="/superbeck/article/details/4446177" title="设计模式：简单工厂、工厂方法、抽象工厂之小结与区别">设计模式：简单工厂、工厂方法、抽象工厂之小结与区别</a><span>(5)</span>
</li>
<li>
<a href="/superbeck/article/details/4247925" title="displaytag的properties文件的汉化-displaytag_zh_CN.properties">displaytag的properties文件的汉化-displaytag_zh_CN.properties</a><span>(3)</span>
</li>
<li>
<a href="/superbeck/article/details/3226709" title="一次cygwin的绿化 - 顺便多学一些脚本/注册表的知识">一次cygwin的绿化 - 顺便多学一些脚本/注册表的知识</a><span>(2)</span>
</li>
<li>
<a href="/superbeck/article/details/5325991" title="设计模式：Visitor模式">设计模式：Visitor模式</a><span>(2)</span>
</li>
<li>
<a href="/superbeck/article/details/5721382" title="eclipse上的几个Velocity插件">eclipse上的几个Velocity插件</a><span>(2)</span>
</li>
<li>
<a href="/superbeck/article/details/4247145" title="使用Hibernate连接MySQL数据库发生closed.Connection问题的一种解决方法">使用Hibernate连接MySQL数据库发生closed.Connection问题的一种解决方法</a><span>(2)</span>
</li>
<li>
<a href="/superbeck/article/details/5969884" title="设计模式：Bridge模式">设计模式：Bridge模式</a><span>(2)</span>
</li>
<li>
<a href="/superbeck/article/details/2575212" title="浏览器的刷新和确定按钮的功能">浏览器的刷新和确定按钮的功能</a><span>(2)</span>
</li>
</ul>
</div>
<div id="homepageArticles" class="panel">
<ul class="panel_head"><span>推荐文章</span></ul>
<ul class="panel_body" id="ad_commend"></ul>
</div>
<script type="text/javascript">
 new Ad(12, 'ad_commend');
</script><div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body itemlist">
    <li>
    <a href="/superbeck/article/details/4323861#comments">StarUML: 插件加载失败的解决方法</a>
    <p style="margin:0px;"><a href="/zhanshanyou" class="user_name">zhanshanyou</a>:
解决问题的好文章，多谢！
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/5325991#comments">设计模式：Visitor模式</a>
    <p style="margin:0px;"><a href="/qyongkang" class="user_name">qyongkang</a>:
写的好，终于看懂了
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/4247925#comments">displaytag的properties文件的汉化-displaytag_zh_CN.properties</a>
    <p style="margin:0px;"><a href="/seeyou339621438" class="user_name">seeyou339621438</a>:
嗯，我也是看了你的文章才解决了问题！非常感谢。
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/5325991#comments">设计模式：Visitor模式</a>
    <p style="margin:0px;"><a href="/sheismylife" class="user_name">sheismylife</a>:
写的挺好。我已经快忘记Visitor了，看了你的UML图马上想起来了。
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/5721382#comments">eclipse上的几个Velocity插件</a>
    <p style="margin:0px;"><a href="/Wuaner" class="user_name">Wuaner</a>:
你说的 g &amp; s 上的 Veloeclipse，是完全一样的，没有任何区别，只是作者闲的没事同时上...
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/4213095#comments">使用jstl1.1，注意与1.0的区别</a>
    <p style="margin:0px;"><a href="/usx09325_" class="user_name">usx09325_</a>:
顶顶
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/4446177#comments">设计模式：简单工厂、工厂方法、抽象工厂之小结与区别</a>
    <p style="margin:0px;"><a href="/lxxxxl" class="user_name">lxxxxl</a>:
“简单工厂 ： 用来生产同一等级结构中的任意产品。（对于增加新的产品，无能为力）”我认为简单工厂模式...
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/1344230#comments">eclipse中安装插件的几种方法</a>
    <p style="margin:0px;"><a href="/bingyingao" class="user_name">bingyingao</a>:
mark一下
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/4446177#comments">设计模式：简单工厂、工厂方法、抽象工厂之小结与区别</a>
    <p style="margin:0px;"><a href="/elance_123" class="user_name">elance_123</a>:
文中提到的“产品类可以是多种形式，多层继承或者是单个类都是可以的”，是否可以解释一下“多层继承或者是...
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/4247066#comments">如何用Java实现MySQL数据库的备份和恢复</a>
    <p style="margin:0px;"><a href="/mjm88132" class="user_name">mjm88132</a>:
`111
    </p>
    </li>
</ul>
</div>
<div id="custom_column_968473" class="panel">
<ul class="panel_head"><span>useful link</span></ul>
<ul class="panel_body">
<ul><li><a href="www.download.com" target=_blank>免费软件(英文)</a></li><li><a href="www.open-open.com" target=_blank>开源大全</a></li><li><a href="www.sourceforge.net" target=_blank>source forge</a></li><li><a href="www.java2s.com" target=_blank>www.java2s.com</a></li><li><a href="http://www.w3schools.com/" target=_blank>http://www.w3schools.com/</a></li></ul>
</ul>
</div></div>
<div class="clear"></div>
</div>

<div class="clear"></div>
</div>

<script type="text/javascript" src="http://static.blog.csdn.net/scripts/newblog.min.js?v=1.1"></script>
<script type="text/javascript" src="http://medal.blog.csdn.net/showblogmedal.ashx?blogid=129278"></script>

<script type="text/javascript">
document.write('<script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/publib_footer.js?' + Math.floor(new Date()/120000).toString(36) + '="></'+'script>');
</script>

<script type="text/javascript" src="http://passport.csdn.net/content/loginbox/login.js"></script>
<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script>
<script type="text/javascript" src="http://www.csdn.net/ui/scripts/Csdn/counter.js?v=1"></script>


<script type="text/javascript" src="http://ad.csdn.net/scripts/ad-blog.js"></script>

<script type="text/javascript" src="http://zz.csdn.net/js/count.js"></script>

</div>
</body>
</html>