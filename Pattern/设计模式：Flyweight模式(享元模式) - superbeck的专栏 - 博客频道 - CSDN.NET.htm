<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>设计模式：Flyweight模式(享元模式) - superbeck的专栏 - 博客频道 - CSDN.NET</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="description" content="记得在大学时，用当时的那台电脑玩魔兽，一旦视野内存在大量兵的时候，游戏就会暂时卡掉，无法进行任何操作。那就是因为系统new出来太多的兵，所需内存空间已经超出了硬件可提供的空间而导致游戏卡掉的。事实上，当遇到类似问题时，我们可以优先考虑一下Flyweight模式。" />
<script src="http://static.blog.csdn.net/scripts/jquery.js" type="text/javascript"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/ad.js?v=1.1"></script>
<link rel="Stylesheet" type="text/css" href="http://static.blog.csdn.net/skin/default/css/style.css?v=1.1" />
<link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="/superbeck/rss/list" />
<link rel="shortcut icon" href="/favicon.ico" />
<link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css" />
</head>
<body>
<script src="http://csdnimg.cn/pubnav/js/pub_topnav_2011.js"type="text/javascript"></script>

<div id="container">
<div id="header">
    <div class="header">
        <div id="blog_title">
            <h1><a href="http://blog.csdn.net/superbeck">superbeck的专栏</a></h1>
            <h2>以小事始，方知大事之成败</h2>
            <div class="clear"></div>
        </div>
        <div class="clear"></div>
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg"></div>
    <div class="navigator">
        <ul>
            <li id="btnContents"><a href="http://blog.csdn.net/superbeck?viewmode=contents"><span><img src="http://static.blog.csdn.net/images/ico_list.gif">目录视图</span></a></li>
            <li id="btnView"><a href="http://blog.csdn.net/superbeck?viewmode=list"><span><img src="http://static.blog.csdn.net/images/ico_summary.gif">摘要视图</span></a></li>
            <li id="btnRss"><a href="http://blog.csdn.net/superbeck/rss/list"><span><img src="http://static.blog.csdn.net/images/ico_rss.gif">订阅</span></a></li>
</ul>
    </div>
</div>
<script type="text/javascript">
    var username = "superbeck";
    var _blogger = username;
    var blog_address = "http://blog.csdn.net/superbeck";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "";
</script>

<div id="body">
<div id="main">
<div class="main">
<div class="notice"> 

<a href="https://code.csdn.net/blog/12" target="_blank">
<font color=red>公告：博客新增直接引用代码功能</font></a>



&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://www.csdn.net/article/2013-07-24/2816320" target="_blank"><font color=blue>专访谭海燕：移动互联网开发的那些事
</font></a>

&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/csdnproduct/article/details/9495139
"target="_blank">
<font color=red>CSDN博客频道自定义域名、标签搜索功能上线啦！


 </font></a>

&nbsp;&nbsp;&nbsp;&nbsp;

<a href="http://blog.csdn.net/adali/article/details/9813651"target="_blank">
<font color=blue>独一无二的职位：开源社区经理 
 </font></a>




</div>
<div id="article_details" class="details">
    <div class="article_title">
    <span class="ico ico_type_Original"></span>
    <h3>
        <span class="link_title"><a href="/superbeck/article/details/5981300">
        设计模式：Flyweight模式(享元模式)
        </a></span>
    </h3>
</div>

        
    <div class="article_manage">
        <span class="link_categories">
        分类：
            <a href="/superbeck/article/category/207307">java</a> 
            <a href="/superbeck/article/category/490099">设计/UML/MDA</a> 
        </span>
    <span class="link_postdate">2010-11-02 10:19</span>
    <span class="link_view" title="阅读次数">351人阅读</span>
    <span class="link_comments" title="评论次数"><a href="#comments">评论</a>(0)</span>
    <span class="link_collect"><a href="javascript:void(0);" onclick="javascript:collectArticle('设计模式：Flyweight模式(享元模式)','5981300');return false;" title="收藏">收藏</a></span>
    <span class="link_report"><a href="#report"  onclick="javascript:report(5981300,2);return false;" title="举报">举报</a></span>
    
</div>
<div class="tag2box"><a href='http://blog.csdn.net/tag/details.html?tag=%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f' target=_blank>设计模式</a><a href='http://blog.csdn.net/tag/details.html?tag=object' target=_blank>object</a><a href='http://blog.csdn.net/tag/details.html?tag=%e5%9c%b0%e5%9b%be%e7%9b%b8%e5%85%b3' target=_blank>地图相关</a><a href='http://blog.csdn.net/tag/details.html?tag=%e6%b8%b8%e6%88%8f' target=_blank>游戏</a><a href='http://blog.csdn.net/tag/details.html?tag=immutable' target=_blank>immutable</a><a href='http://blog.csdn.net/tag/details.html?tag=%e6%95%b0%e6%8d%ae%e5%ba%93' target=_blank>数据库</a></div>


    
<div id="article_content" class="article_content">
<p><span style="font-size: small;">记得在大学时，用当时的那台电脑玩魔兽，一旦视野内存在大量兵的时候，游戏就会暂时卡掉，无法进行任何操作。那就是因为系统new出来太多的兵，所需内存空间已经超出了硬件可提供的空间而导致游戏卡掉的。事实上，当遇到类似问题时，我们可以优先考虑一下Flyweight模式。<br />
<br />
<strong><span style="font-size: medium;">定义</span>
</strong>
<br />
GOF: 使用共享技术高效地支持大量的细粒度对象。<br />
中文名字的意思也是很称职的：共享同一个元对象。<br />
<br />
<strong><span style="font-size: medium;">结构图</span>
</strong>
<br />
<br />
<img src="http://hi.csdn.net/attachment/201011/2/0_1288664632JkNr.gif" alt="" />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
图一：GOF中的Flyweight模式结构图<br />
<br />
<strong><span style="font-size: medium;">解说</span>
</strong>
<br />
*Flyweight模式的设计意图是避免大量相似对象的创建。一般会先创建一个或一组具有相同属性的元对象，使客户端可以共享使用这个元对象。由于元对象被大量的共享使用，因此对内存的占用有很大的改善。<br />
*Flyweight对象能够做到共享的关键是区分内部状态（Internal State）和外部状态（External State）。<br />
*内部状态存储在Flyweight对象内部，并且不会随环境的改变而有改变。因此，一个Flyweight对象可以具有内部状态并可以共享。<br />
*外部状态是随环境改变而改变的、不可共享的状态。Flyweight对象的外部状态必须由客户端保存，并在对象被创建后，在需要使用的时候再传给Flyweight对象。<br />
*外部状态不可以影响Flyweight对象的内部状态。换句话说，它们是相互独立的。<br />
<br />
<strong><span style="font-size: medium;">示例</span>
</strong>
<br />
Design Patterns[GOF]中给的例子是一个文档编辑器的format功能的例子。英文里只有几十个标点符号和26个英文字符可用，而在一篇通常大小的文档中，一个字符基本上会用几百遍以上，只不过分别具有不同的style和位置而已。在这里，对于每一个Character对象来说，它所代表的字符是永远不会变动的，属于内部状态；而它的style和位置则是经常变动的，属于外部状态。<br />
<br />
文章的开始，我们提到了魔兽游戏的例子。不过魔兽中的士兵是否足够多是与地图相关的，所以采用Flyweight模式是不是最好的方案还要认真斟酌。不过我们还有别的例子可用，最常见的就是棋牌游戏。<br />
围棋桌是19X19，一个可以下361个棋子，可能放在一局游戏中不是太多。但是现在的游戏大都网络化了，一台服务器可以同时提供n局对战，那么所需要创建的棋子对象就会非常的多。而棋子所具有的属性也很简单，圆形和黑、白色就是它的内部属性，一旦创建好，就永远不会变；而它的位置就是外部属性。针对这个例子提供了一个简单的设计。<br />
<br />
<img src="http://hi.csdn.net/attachment/201011/2/0_1288664664OTjz.gif" alt="" />
<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
图二：围棋中应用Flyweight模式的设计<br />
<br />
在类WeiqiChessman中，shape和color都是对象的内部状态，一旦确定之后就永远不会改变的；而它所在的位置则是在客户端每次调用它的方法moveTo()时才能够得知，这是它的外部状态，是可以被改变的。<br />
这个模式对于其他类似于的棋牌游戏来说也是适合的，只要系统的需求满足以下条件即可。<br />
<br />
<strong><span style="font-size: medium;">适用于</span>
</strong>
<br />
当以下<strong>所有</strong>
的条件都满足时，可以考虑使用Flyweight模式：<br />
(1) 一个系统有大量的对象。<br />
(2) 这些对象耗费大量的内存。<br />
(3) 这些对象的状态中的大部分都可以外部化。<br />
(4) 这些对象可以按照内部状态分成很多组，当把外部状态从对象中剔除时，每个组都可以仅用一个对象代替。<br />
(5) 软件系统不依赖于这些对象的身份，换言之，这些对象可以是不可分辨的。<br />
最后，使用Flyweight模式需要维护一个记录了系统已有的所有共享单元的表，而这需要耗费资源。因此，应当在有足够多的Flyweight实例可供共享时才值得使用Flyweight模式。<br />
<br />
<strong><span style="font-size: medium;">优缺点</span>
</strong>
<br />
★Flyweight模式的优点在于它大幅度的降低了内存中对象的数量。但是，它做到这一点所付出的代价也很高：<br />
</span>
<span style="font-size: small;">★</span>
<span style="font-size: small;">
Flyweight模式使得系统更加复杂。为了使对象可以共享，需要将一些状态外部化，这使得程序的逻辑复杂化。<br />
</span>
<span style="font-size: small;">★</span>
<span style="font-size: small;">Flyweight模式将共享对象的状态外部化，而读取外部状态使得运行时间稍微变长，算是以时间换取了空间。<br />
<br />
<strong><span style="font-size: medium;">Object Pool是Flyweight模式吗？</span>
</strong>
<br />
曾经看到有些文章中是把Object Pool认为是Flyweight模式的一种，并且也有一些争论。<br />
关于这一点，笔者也进行了一些思考和调查。个人认为 http://www.mindspring.com/~mgrand/pattern_synopses.htm 和 http://www.oodesign.com/object-pool-pattern.html 的理解更为合理。也就是把Object Pool作为23种模式之外的一种新的模式，并且把它归类为创建型模式中(Creational Patterns)。<br />
<br />
应用Flyweight模式的关键之一是内部状态和外部状态的区分，而Object Pool所应用的场景基本上不会考虑这一点。<br />
Flyweight模式所解决的问题之一是使大量的对象共享同一个元对象，是对空间（memory）的优化；而Object Pool主要是解决的问题是对象的创建过程很耗时，所以通过pool的方式来快速的提供对象，这是对时间（performance）的优化，当然，可能也会有空间上的考虑。<br />
Flyweight模式中的元对象本身是Immutable的，是可以同时被多个客户端使用的，是一种并行的方案，而Object Pool中创建的对象一旦被某个客户端使用中，另外一个客户端就不能够同时使用这个对象，是一种串行的方案。<br />
<br />
基于以上分析，我们可以看出，Object Pool模式主要是针对对象的创建过程很困难，很耗时，很耗资源，或者说对象的创建个数有限制，而提供的一种解决方案。JDBC程序中提供的连接池就是一个很好的例子，数据库连接的创建包含物理连接的创建，非常的消耗时间，另外大部分数据库产品可同时支持的数据库连接个数也是有限的。<br />
Object Pool模式基本上不关心外部的使用，并不要求客户端持有任何其他信息。从某种程度上讲，它的结构和功能和工厂方法比较接近，只是内部的创建对象的过程不一样。<br />
<br />
因此，笔者也认为把Object Pool归类为23个模式之外的一种新的创建型模式更为合理。<br />
<br />
<strong><span style="font-size: medium;">参考资料</span>
</strong>
<br />
1. Flyweight Pattern<br />
&nbsp;&nbsp; http://www.oodesign.com/flyweight-pattern.html<br />
2. Overview of Design Patterns<br />
&nbsp;&nbsp; http://www.mindspring.com/~mgrand/pattern_synopses.htm<br />
3. Object Pool<br />
&nbsp;&nbsp; http://www.oodesign.com/object-pool-pattern.html<br />
4. 设计模式之Flyweight(享元) FlyWeight模式<br />
&nbsp;&nbsp; http://www.jdon.com/designpatterns/flyweight.htm<br />
5. Flyweight模式之我见<br />
&nbsp;&nbsp; http://www.jdon.com/jivejdon/thread/31903<br />
6. Flyweight模式<br />
&nbsp;&nbsp; http://chenchh.javaeye.com/blog/668089<br />
7. java flyweight模式<br />
&nbsp;&nbsp; http://blog.csdn.net/ykdsg/archive/2010/02/24/5321750.aspx<br />
8. Java对象池技术的原理及其实现 <br />
&nbsp;&nbsp; http://java.chinaitlab.com/advance/731726.html<br />
9. Java小对象的解决之道&mdash;&mdash;对象池（Object Pool）的设计与应用<br />
&nbsp;&nbsp; http://blog.csdn.net/bryantd/archive/2006/08/20/1100019.aspx</span>
</p>
</div>

<div class="share_buttons" id="sharePanel"></div>
<!--192.168.100.33-->
<div class="article_next_prev">
    <li class="prev_article"><span>上一篇：</span><a href="/superbeck/article/details/5972497">VMWare中网络配置详解</a></li>
    <li class="next_article"><span>下一篇：</span><a href="/superbeck/article/details/6015118">Notepad++: Load langs.xml failed! — and how to fix it</a></li>
</div>


    
</div>
<div id="ad_cen">
<script type="text/javascript" >BAIDU_CLB_SLOT_ID = "117306";</script>
<script type="text/javascript" src="http://cbjs.baidu.com/js/o.js"></script>
</div>
<script type="text/javascript">
    //new Ad(4, 'ad_cen');
</script>
<div id="comment_title" class="panel_head">查看评论<a name="comments"></a></div>
<div id="comment_list"></div>
<div id="comment_bar"></div>
<div id="comment_form"></div>
<div class="announce">* 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
<script type="text/javascript">
    var fileName = '5981300';
    var commentscount = 0;
    var islock = false
</script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/comment.js"></script>
<div id="ad_bot"></div>
<script type="text/javascript">
    new Ad(5, 'ad_bot');
</script>
<div id="report_dialog"></div>

<div id="d-top" style="display:none;">
<a id="d-top-a" href="#" title="回到顶部">
<img src="http://static.blog.csdn.net/images/top.png" alt="TOP" /></a>
</div>
<script type="text/javascript">
    $(function(){
        var d_top=$('#d-top');
        document.onscroll=function(){
            var scrTop=(document.body.scrollTop||document.documentElement.scrollTop);
            if(scrTop>500){
                d_top.show();
            }else{
                d_top.hide();
            }
        }
        $('#d-top-a').click(function(){
            scrollTo(0,0);
            this.blur();
            return false;
        });
    });
</script>

<div class="clear"></div>
</div>
</div>

<div id="side">
<div class="side">
<div id="panel_Profile" class="panel">
<ul class="panel_head"><span>个人资料</span></ul>
<ul class="panel_body profile">
<div id="blog_userface">
    <a href="http://my.csdn.net/superbeck" target="_blank">
    <img src="http://avatar.csdn.net/5/C/A/1_superbeck.jpg" title="访问我的空间" style="max-width:90%"/>
    </a>
    <br />
    <span><a href="http://my.csdn.net/superbeck" class="user_name" target="_blank">superbeck</a></span>
</div>
<div class="interact">
<a href="javascript:void(0);" class="attent" id="span_add_follow" title="[加关注]"></a>
<a href="javascript:void(0);" class="letter" onclick="loginto(1)" title="[发私信]"></a>
</div>
<div id="blog_medal">
</div>
<ul id="blog_rank">
    <li>访问：<span>93918次</span></li>
    <li>积分：<span>1765分</span></li>
    <li>排名：<span>第5120名</span></li>
</ul>
<ul id="blog_statistics">
    <li>原创：<span>72篇</span></li>
    <li>转载：<span>20篇</span></li>
    <li>译文：<span>1篇</span></li>
    <li>评论：<span>45条</span></li>
</ul>
</ul>
</div>

<div class="panel">
<ul class="panel_body" style="padding:0;">
<script type="text/javascript" src="http://cbjs.baidu.com/js/m.js"></script> 
<script type="text/javascript"> 
BAIDU_CLB_preloadSlots("724643","117306"); 
</script>
<script type="text/javascript">BAIDU_CLB_fillSlot("724643");</script> 
</ul>
</div>
<div class="panel" id="panel_Search">
    <ul class="panel_head"><span>文章搜索</span></ul>
    <ul class="panel_body">
        <form id="frmSearch" action="http://so.csdn.net/search" class="form_search" target="_blank">
        <span><input id="inputSearch" type="text" class="blogsearch" title="请输入关键字" /></span>
        <input id="btnSubmit" type="submit" value="搜索" title="search in blog" />
        <input type="hidden" name="q" id="inputQ" />
        <input type="hidden" name="t" value="blog" />
        <a id="btnSearchBlog" target="_blank"></a>
        </form>
    </ul>
</div><div id="panel_Category" class="panel">
<ul class="panel_head"><span>文章分类</span></ul>
<ul class="panel_body">
<li>
<a href="http://blog.csdn.net/superbeck/article/category/551445">Database</a><span>(2)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/494146">eclipse</a><span>(7)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/207307">java</a><span>(27)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/417007">Life</a><span>(5)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/487521">notes开发</a><span>(2)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/590316">python</a><span>(1)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/744229">ubuntu/linux</a><span>(0)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/708356">Velocity</a><span>(1)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/547684">Web开发</a><span>(22)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/412477">开发工具相关</a><span>(28)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/451648">开发杂想</a><span>(13)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/490099">设计/UML/MDA</a><span>(13)</span>
</li>
<li>
<a href="http://blog.csdn.net/superbeck/article/category/473096">软件工程</a><span>(6)</span>
</li>
</ul>
</div><div id="panel_Archive" class="panel">
<ul class="panel_head"><span>文章存档</span></ul>
<ul class="panel_body">
<div id="archive_list">
<!--归档统计-->
<li><a href="http://blog.csdn.net/superbeck/article/month/2011/04">2011年04月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2011/02">2011年02月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/11">2010年11月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/10">2010年10月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/09">2010年09月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/07">2010年07月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/06">2010年06月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/05">2010年05月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/03">2010年03月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/02">2010年02月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2010/01">2010年01月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/11">2009年11月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/10">2009年10月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/09">2009年09月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/08">2009年08月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/07">2009年07月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/06">2009年06月</a><span>(9)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/05">2009年05月</a><span>(6)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/03">2009年03月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/02">2009年02月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2009/01">2009年01月</a><span>(4)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2008/12">2008年12月</a><span>(2)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2008/11">2008年11月</a><span>(5)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2008/10">2008年10月</a><span>(8)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2008/09">2008年09月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2008/08">2008年08月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2008/06">2008年06月</a><span>(3)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2006/11">2006年11月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2006/10">2006年10月</a><span>(1)</span></li><li><a href="http://blog.csdn.net/superbeck/article/month/2006/05">2006年05月</a><span>(1)</span></li>
</div>
</ul>
</div>
<div id="hotarticls" class="panel">
<ul class="panel_head"><span>阅读排行</span></ul>
<ul class="panel_body itemlist">
<li>
<a href="/superbeck/article/details/5721382" title="eclipse上的几个Velocity插件">eclipse上的几个Velocity插件</a><span>(7394)</span>
</li>
<li>
<a href="/superbeck/article/details/4359870" title="Ant:给Ant脚本传递参数的最佳实践">Ant:给Ant脚本传递参数的最佳实践</a><span>(4790)</span>
</li>
<li>
<a href="/superbeck/article/details/4446177" title="设计模式：简单工厂、工厂方法、抽象工厂之小结与区别">设计模式：简单工厂、工厂方法、抽象工厂之小结与区别</a><span>(3877)</span>
</li>
<li>
<a href="/superbeck/article/details/4799407" title="基于java的程序OutOfMemory问题的解决及Xms/Xmx/Xss的解释和应用">基于java的程序OutOfMemory问题的解决及Xms/Xmx/Xss的解释和应用</a><span>(3805)</span>
</li>
<li>
<a href="/superbeck/article/details/3983671" title="程序员兼职创收的新方法 - 依托平台开发应用">程序员兼职创收的新方法 - 依托平台开发应用</a><span>(3587)</span>
</li>
<li>
<a href="/superbeck/article/details/4532818" title="python学习——初次接触(python,wxpython,Boa,py2exe)">python学习——初次接触(python,wxpython,Boa,py2exe)</a><span>(3483)</span>
</li>
<li>
<a href="/superbeck/article/details/3226709" title="一次cygwin的绿化 - 顺便多学一些脚本/注册表的知识">一次cygwin的绿化 - 顺便多学一些脚本/注册表的知识</a><span>(3171)</span>
</li>
<li>
<a href="/superbeck/article/details/5325991" title="设计模式：Visitor模式">设计模式：Visitor模式</a><span>(2511)</span>
</li>
<li>
<a href="/superbeck/article/details/4247145" title="使用Hibernate连接MySQL数据库发生closed.Connection问题的一种解决方法">使用Hibernate连接MySQL数据库发生closed.Connection问题的一种解决方法</a><span>(2254)</span>
</li>
<li>
<a href="/superbeck/article/details/4247066" title="如何用Java实现MySQL数据库的备份和恢复">如何用Java实现MySQL数据库的备份和恢复</a><span>(2124)</span>
</li>
</ul>
</div>
<div id="hotarticls2" class="panel">
<ul class="panel_head"><span>评论排行</span></ul>
<ul class="panel_body itemlist">
<li>
<a href="/superbeck/article/details/4323861" title="StarUML: 插件加载失败的解决方法">StarUML: 插件加载失败的解决方法</a><span>(11)</span>
</li>
<li>
<a href="/superbeck/article/details/4213095" title="使用jstl1.1，注意与1.0的区别">使用jstl1.1，注意与1.0的区别</a><span>(5)</span>
</li>
<li>
<a href="/superbeck/article/details/4446177" title="设计模式：简单工厂、工厂方法、抽象工厂之小结与区别">设计模式：简单工厂、工厂方法、抽象工厂之小结与区别</a><span>(5)</span>
</li>
<li>
<a href="/superbeck/article/details/4247925" title="displaytag的properties文件的汉化-displaytag_zh_CN.properties">displaytag的properties文件的汉化-displaytag_zh_CN.properties</a><span>(3)</span>
</li>
<li>
<a href="/superbeck/article/details/3226709" title="一次cygwin的绿化 - 顺便多学一些脚本/注册表的知识">一次cygwin的绿化 - 顺便多学一些脚本/注册表的知识</a><span>(2)</span>
</li>
<li>
<a href="/superbeck/article/details/5325991" title="设计模式：Visitor模式">设计模式：Visitor模式</a><span>(2)</span>
</li>
<li>
<a href="/superbeck/article/details/5721382" title="eclipse上的几个Velocity插件">eclipse上的几个Velocity插件</a><span>(2)</span>
</li>
<li>
<a href="/superbeck/article/details/4247145" title="使用Hibernate连接MySQL数据库发生closed.Connection问题的一种解决方法">使用Hibernate连接MySQL数据库发生closed.Connection问题的一种解决方法</a><span>(2)</span>
</li>
<li>
<a href="/superbeck/article/details/5969884" title="设计模式：Bridge模式">设计模式：Bridge模式</a><span>(2)</span>
</li>
<li>
<a href="/superbeck/article/details/2575212" title="浏览器的刷新和确定按钮的功能">浏览器的刷新和确定按钮的功能</a><span>(2)</span>
</li>
</ul>
</div>
<div id="homepageArticles" class="panel">
<ul class="panel_head"><span>推荐文章</span></ul>
<ul class="panel_body" id="ad_commend"></ul>
</div>
<script type="text/javascript">
 new Ad(12, 'ad_commend');
</script><div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body itemlist">
    <li>
    <a href="/superbeck/article/details/4323861#comments">StarUML: 插件加载失败的解决方法</a>
    <p style="margin:0px;"><a href="/zhanshanyou" class="user_name">zhanshanyou</a>:
解决问题的好文章，多谢！
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/5325991#comments">设计模式：Visitor模式</a>
    <p style="margin:0px;"><a href="/qyongkang" class="user_name">qyongkang</a>:
写的好，终于看懂了
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/4247925#comments">displaytag的properties文件的汉化-displaytag_zh_CN.properties</a>
    <p style="margin:0px;"><a href="/seeyou339621438" class="user_name">seeyou339621438</a>:
嗯，我也是看了你的文章才解决了问题！非常感谢。
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/5325991#comments">设计模式：Visitor模式</a>
    <p style="margin:0px;"><a href="/sheismylife" class="user_name">sheismylife</a>:
写的挺好。我已经快忘记Visitor了，看了你的UML图马上想起来了。
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/5721382#comments">eclipse上的几个Velocity插件</a>
    <p style="margin:0px;"><a href="/Wuaner" class="user_name">Wuaner</a>:
你说的 g &amp; s 上的 Veloeclipse，是完全一样的，没有任何区别，只是作者闲的没事同时上...
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/4213095#comments">使用jstl1.1，注意与1.0的区别</a>
    <p style="margin:0px;"><a href="/usx09325_" class="user_name">usx09325_</a>:
顶顶
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/4446177#comments">设计模式：简单工厂、工厂方法、抽象工厂之小结与区别</a>
    <p style="margin:0px;"><a href="/lxxxxl" class="user_name">lxxxxl</a>:
“简单工厂 ： 用来生产同一等级结构中的任意产品。（对于增加新的产品，无能为力）”我认为简单工厂模式...
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/1344230#comments">eclipse中安装插件的几种方法</a>
    <p style="margin:0px;"><a href="/bingyingao" class="user_name">bingyingao</a>:
mark一下
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/4446177#comments">设计模式：简单工厂、工厂方法、抽象工厂之小结与区别</a>
    <p style="margin:0px;"><a href="/elance_123" class="user_name">elance_123</a>:
文中提到的“产品类可以是多种形式，多层继承或者是单个类都是可以的”，是否可以解释一下“多层继承或者是...
    </p>
    </li>
    <li>
    <a href="/superbeck/article/details/4247066#comments">如何用Java实现MySQL数据库的备份和恢复</a>
    <p style="margin:0px;"><a href="/mjm88132" class="user_name">mjm88132</a>:
`111
    </p>
    </li>
</ul>
</div>
<div id="custom_column_968473" class="panel">
<ul class="panel_head"><span>useful link</span></ul>
<ul class="panel_body">
<ul><li><a href="www.download.com" target=_blank>免费软件(英文)</a></li><li><a href="www.open-open.com" target=_blank>开源大全</a></li><li><a href="www.sourceforge.net" target=_blank>source forge</a></li><li><a href="www.java2s.com" target=_blank>www.java2s.com</a></li><li><a href="http://www.w3schools.com/" target=_blank>http://www.w3schools.com/</a></li></ul>
</ul>
</div></div>
<div class="clear"></div>
</div>

<div class="clear"></div>
</div>

<script type="text/javascript" src="http://static.blog.csdn.net/scripts/newblog.min.js?v=1.1"></script>
<script type="text/javascript" src="http://medal.blog.csdn.net/showblogmedal.ashx?blogid=129278"></script>

<script type="text/javascript">
document.write('<script type="text/javascript" src="http://csdnimg.cn/pubfooter/js/publib_footer.js?' + Math.floor(new Date()/120000).toString(36) + '="></'+'script>');
</script>

<script type="text/javascript" src="http://passport.csdn.net/content/loginbox/login.js"></script>
<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script>
<script type="text/javascript" src="http://www.csdn.net/ui/scripts/Csdn/counter.js?v=1"></script>


<script type="text/javascript" src="http://ad.csdn.net/scripts/ad-blog.js"></script>

<script type="text/javascript" src="http://zz.csdn.net/js/count.js"></script>

</div>
</body>
</html>